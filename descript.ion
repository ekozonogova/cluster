1) Подготовка данных для матрицы А
1.1 Получаем HTML-код страницы, содержащей ссылку на документ госкомстата
1.2 Извлекаем ссылку по набору признаков
1.3 Загружаем документ MicrosoftExcel
1.4 C помощью библиотеки xlrd языка Python преобразуем формат MicrosoftExcel в формат numpy
2. Построение матрицы Lv
3. Построение матрицы связности
4. Выделение эталонных кластеров
Одним из методов выделения кластера являлся поиск разрыва второй производной квазизависимости Lv от номера отрасли в списке, отсортированном по убыванию Lv. Этот метод реализован при помощи библиотеки scipy (метод polifit для аппроксимации полиномом) и методы символьных вычислений из библиотеки sympy. Однако, лучшие результаты были получены ....
5. Построение карты этелонных кластеров
Карта эталонных кластеров строится при помощи инструмента graphviz. Для работы этой программе нужно представить данные в определенном формате (описание). A -> B из filename . В силу ряда особенностей формата возникла необходимость в автоматическом форматировании подписей к графу. Для спользуется метод wrap(), написанный с использованием библиотеки nltk. Данный метод переносит строку-подпись так, чтобы она максимально корректным образом размещалась на графе. Т.к. graphviz использует строки для идентификации узлов в графе метод реализован так, чтобы свести все возможные варианты написания подписи к одному виду. Для этого используется метод нечеткого сравнения строк, основанный на n-граммах compare(). 

В результате получается множество строк вида "отрасль А" -> "отрасль Б" и строк вида "отрасль А [cluster=N]", которые испольуются программами graphviz и gvmap для построения карты. 

6. Идентификация регионов-участников межрегиональных кластеров
Идентификация регионов основана на данных, загружаемых из ряда источников?
а) МИСИП...
б) Онлайн-энциклопедии (определение географического положения регионов, их центров и связности)
в) Сайтов географических сервисов (расчет расстояний между регионами).
Работа программы на этом этапе основана на анлизе данных о геоэкономическом положении региона.

Для каждого региона по данным онлайн-энциклопедий вычислается список граничащих с ним областей (картинка скрин). Обрабатываются два варианта определения граничащих регионов - для размеченных текстов, где список регионов содержит ссылки на их описания и неразмеченных, где имеется простой перечень. Во втором случае используются статистические методы определения важности слова в тексте из библиотеки rutermextract. Также, для каждого региона определяется его центральный город. В случае, если регион состоит из одного города (для совместимости с дальнейшими методами) его столицей считается он сам (примеры из regions). 

Далее, производится расчет растояния между центрами всех регионов. При отсутствии автомобильного или ЖД-сообщения используется расстояние "по-воздуху", умноженное на средневзвешенный коэффичиент расстояний, посчитанных для других регионов, где такое сообщение имеется. Данные о границах, административных центрах и расстояниях кэшируются самообучающимся алгоритмом. Кэшированные данные могут иметь timestamp - метку времени, которая завит алгоритм вновь обратиться к онлайн-данным по истечении некоторого промежутка времени (это связано с изменчивостью границ регионов и дорожной карты России).

Необходимо отметить, что наименования регионов России не систематизиорваны и иногда противоречивы (ХМАО и т.п.). Для отождествления регионов, записанных в различных "нотациях" вновь применяются методы нечеткого сравнения фраз, основанные на принципах статистической лингвистики. Будучи однажды посчитанным результат запоминается для ускорения дальнейшей обработки (пример yandexname, emissname).

Локализация

Моран

Еще моран

Отображение на карте

7. Работа веб приложения
Веб приложение использует данные, рассчитанные на этапах 1-6 и API Яндекс.Карт. Скриншот
При загрузке пользователем адреса ruclusters.ru управление передается веб-серверу (nginx), который c помощью фреймворка django генерирует веб-интерфейс, содержащий карту и выпадающие списки с различными специализациями и отраслями. При нажатии кнопки "Найти" на стороне клиента формируется серия запросов в API Яндекс.Карт и в асинхронном режиме принимаются данные, поступающие в ответ. Далее на карте отображаются предприятия, удовлетворяющие критериям, заданным пользователем.
В клиентской части используются JavaScript-библиотеки jquery, knockout.js.
скриншоь
